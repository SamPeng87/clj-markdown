(ns clj-markdown.core  (:use [clojure.java.io]))(defn executeTranslate  "执行替换动作"  [src]  )(defn newlines  "换行符的处理方式"  [pattern tag]  (print pattern))(def tag (create-struct :name :class :style :attr :hasblock))(def parser (list                #'newlines              ))(defn changeWrap  "统一换行、空格以及tab"  [string]  (-> string      (clojure.string/replace #"\r\n|\r" "\n")      (clojure.string/replace #"\t" "    ")      (clojure.string/replace #"\u00a0", " ")      (clojure.string/replace #"\u2424" "\n")))(defn joinStrings  "最后将html队列拼接起来"  [results]  (clojure.string/join "" results))(defn parseString  "通过字符串解析markdown文件"  [string & config]  (let [pip (comp              changeWrap              executeTranslate              joinStrings)]    (pip string)))(defn parseFile  "通过文件解析markdown文件"  [filepath & config]  (let [fileread (slurp filepath :encoding "utf-8")]    (parseString fileread (when config (apply hash-map config)))))