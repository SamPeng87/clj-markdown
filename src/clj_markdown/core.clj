(ns clj-markdown.core  (:use [clojure.java.io])  (:use clj-markdown.token))(defn executeTranslate  "将文本解析成内部数据结构"  ([src]   (clj-markdown.token/executeTranslateProcess src true false))  ([src isTop isQuoteBlock]   (clj-markdown.token/executeTranslateProcess src isTop isQuoteBlock)))(defn changeWrap  "统一换行、空格以及tab"  [string]  (-> string      (clojure.string/replace #"\r\n|\r" "\n")      (clojure.string/replace #"\t" "    ")      (clojure.string/replace #"\u00a0", " ")      (clojure.string/replace #"\u2424" "\n")))(defn joinStrings  "最后将html队列拼接起来"  [results]  (print results)  )(defn parseString  "通过字符串解析markdown文件"  [string & settings]  (->    string    (changeWrap)    (executeTranslate)    (joinStrings)))(defn parseFile  "通过文件解析markdown文[件"  [filepath & config]  (let [fileread (slurp filepath :encoding "utf-8")]    (parseString fileread (when config (apply hash-map config)))))